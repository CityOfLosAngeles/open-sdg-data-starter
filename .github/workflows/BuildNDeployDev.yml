name: Build and Deploy Development Data

on: # run this workflow when a push has been made to development branch
  push:
    branches:
      - ghi-42

jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment:
      name: development
      url: https://${{ vars.SITE_DOMAIN_NAME }}
    env:
      # Service Account info to trigger open-sdg-site-starter workflow
      PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      CLOUDFRONT_DIST_ID: ${{ secrets.CDN_DISTRIBUTION_ID }}
    steps:   
 ###########################################################################################################
 #      This is the CI portion
 ###########################################################################################################
        - name: Checkout repo
          uses: actions/checkout@v4
             
 ###########################################################################################################
 #      This is the CD portion
 ###########################################################################################################       
          
        - name: Setup Python
          uses: actions/setup-python@v5 # sets up python in our environment
          with:
            python-version: '3.x' # install python version 3.x, default architecture is x64
          
          # this Action should follow steps to set up Python build environment
        - name: Install Python dependencies requirements
          run: pip3 install -r scripts/requirements.txt

        - name: Build site data
          run: python3 scripts/build_data.py
        
        - name: Install AWS CLI
          run: pip3 install awscli --upgrade --user # install the cli with upgrade to any requirements and into the subdir of the user
            
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4 # use the official GitHub Action from AWS to setup credentials
          with:
            role-to-assume: ${{ secrets.ROLE_ARN }}
            aws-region: ${{ secrets.AWS_REGION }}
            mask-aws-account-id: true
        
        - name: Push Contents to S3 # push the current working directory to the S3 bucket
          run: aws s3 sync _site/ s3://${{ secrets.S3_BUCKET_NAME }} --exclude ".git/*" --exclude ".github/*" --delete # have the bucket have the same content in the repo & exclude the git related directories.
        
        - name: Invalidate CloudFront Cache # Invalidate the CloudFront Distribution Cache to get contents from the S3 bucket
          run: aws cloudfront create-invalidation --distribution-id "$CLOUDFRONT_DIST_ID" --paths "/*"

        - name: Check Invalidation is Complete
          run: ./scripts/check_invalidations.sh

        - name: Trigger open-sdg-site-starter workflow
          run: |
            curl \
            -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT_TOKEN"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/CityOfLosAngeles/open-sdg-site-starter/actions/workflows/BuildNDeployDev.yml/dispatches \
            -d '{"ref":"ghi-23"}'
        